/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthOnBoardingRouteImport } from './routes/_auth/on-boarding'
import { Route as AuthDashboardLayoutRouteImport } from './routes/_auth/_dashboardLayout'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as AuthDashboardLayoutRequestsRouteImport } from './routes/_auth/_dashboardLayout/requests'
import { Route as AuthDashboardLayoutDashboardRouteImport } from './routes/_auth/_dashboardLayout/dashboard'
import { Route as AuthDashboardLayoutBillingRouteImport } from './routes/_auth/_dashboardLayout/billing'
import { Route as AuthDashboardLayoutApiKeysRouteImport } from './routes/_auth/_dashboardLayout/api-keys'

const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthOnBoardingRoute = AuthOnBoardingRouteImport.update({
  id: '/on-boarding',
  path: '/on-boarding',
  getParentRoute: () => AuthRoute,
} as any)
const AuthDashboardLayoutRoute = AuthDashboardLayoutRouteImport.update({
  id: '/_dashboardLayout',
  getParentRoute: () => AuthRoute,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthDashboardLayoutRequestsRoute =
  AuthDashboardLayoutRequestsRouteImport.update({
    id: '/requests',
    path: '/requests',
    getParentRoute: () => AuthDashboardLayoutRoute,
  } as any)
const AuthDashboardLayoutDashboardRoute =
  AuthDashboardLayoutDashboardRouteImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => AuthDashboardLayoutRoute,
  } as any)
const AuthDashboardLayoutBillingRoute =
  AuthDashboardLayoutBillingRouteImport.update({
    id: '/billing',
    path: '/billing',
    getParentRoute: () => AuthDashboardLayoutRoute,
  } as any)
const AuthDashboardLayoutApiKeysRoute =
  AuthDashboardLayoutApiKeysRouteImport.update({
    id: '/api-keys',
    path: '/api-keys',
    getParentRoute: () => AuthDashboardLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof authLoginRoute
  '/on-boarding': typeof AuthOnBoardingRoute
  '/api-keys': typeof AuthDashboardLayoutApiKeysRoute
  '/billing': typeof AuthDashboardLayoutBillingRoute
  '/dashboard': typeof AuthDashboardLayoutDashboardRoute
  '/requests': typeof AuthDashboardLayoutRequestsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof authLoginRoute
  '/on-boarding': typeof AuthOnBoardingRoute
  '/api-keys': typeof AuthDashboardLayoutApiKeysRoute
  '/billing': typeof AuthDashboardLayoutBillingRoute
  '/dashboard': typeof AuthDashboardLayoutDashboardRoute
  '/requests': typeof AuthDashboardLayoutRequestsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/_auth/_dashboardLayout': typeof AuthDashboardLayoutRouteWithChildren
  '/_auth/on-boarding': typeof AuthOnBoardingRoute
  '/_auth/_dashboardLayout/api-keys': typeof AuthDashboardLayoutApiKeysRoute
  '/_auth/_dashboardLayout/billing': typeof AuthDashboardLayoutBillingRoute
  '/_auth/_dashboardLayout/dashboard': typeof AuthDashboardLayoutDashboardRoute
  '/_auth/_dashboardLayout/requests': typeof AuthDashboardLayoutRequestsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/on-boarding'
    | '/api-keys'
    | '/billing'
    | '/dashboard'
    | '/requests'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/on-boarding'
    | '/api-keys'
    | '/billing'
    | '/dashboard'
    | '/requests'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/(auth)/login'
    | '/_auth/_dashboardLayout'
    | '/_auth/on-boarding'
    | '/_auth/_dashboardLayout/api-keys'
    | '/_auth/_dashboardLayout/billing'
    | '/_auth/_dashboardLayout/dashboard'
    | '/_auth/_dashboardLayout/requests'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  authLoginRoute: typeof authLoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/on-boarding': {
      id: '/_auth/on-boarding'
      path: '/on-boarding'
      fullPath: '/on-boarding'
      preLoaderRoute: typeof AuthOnBoardingRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/_dashboardLayout': {
      id: '/_auth/_dashboardLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthDashboardLayoutRouteImport
      parentRoute: typeof AuthRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/_dashboardLayout/requests': {
      id: '/_auth/_dashboardLayout/requests'
      path: '/requests'
      fullPath: '/requests'
      preLoaderRoute: typeof AuthDashboardLayoutRequestsRouteImport
      parentRoute: typeof AuthDashboardLayoutRoute
    }
    '/_auth/_dashboardLayout/dashboard': {
      id: '/_auth/_dashboardLayout/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardLayoutDashboardRouteImport
      parentRoute: typeof AuthDashboardLayoutRoute
    }
    '/_auth/_dashboardLayout/billing': {
      id: '/_auth/_dashboardLayout/billing'
      path: '/billing'
      fullPath: '/billing'
      preLoaderRoute: typeof AuthDashboardLayoutBillingRouteImport
      parentRoute: typeof AuthDashboardLayoutRoute
    }
    '/_auth/_dashboardLayout/api-keys': {
      id: '/_auth/_dashboardLayout/api-keys'
      path: '/api-keys'
      fullPath: '/api-keys'
      preLoaderRoute: typeof AuthDashboardLayoutApiKeysRouteImport
      parentRoute: typeof AuthDashboardLayoutRoute
    }
  }
}

interface AuthDashboardLayoutRouteChildren {
  AuthDashboardLayoutApiKeysRoute: typeof AuthDashboardLayoutApiKeysRoute
  AuthDashboardLayoutBillingRoute: typeof AuthDashboardLayoutBillingRoute
  AuthDashboardLayoutDashboardRoute: typeof AuthDashboardLayoutDashboardRoute
  AuthDashboardLayoutRequestsRoute: typeof AuthDashboardLayoutRequestsRoute
}

const AuthDashboardLayoutRouteChildren: AuthDashboardLayoutRouteChildren = {
  AuthDashboardLayoutApiKeysRoute: AuthDashboardLayoutApiKeysRoute,
  AuthDashboardLayoutBillingRoute: AuthDashboardLayoutBillingRoute,
  AuthDashboardLayoutDashboardRoute: AuthDashboardLayoutDashboardRoute,
  AuthDashboardLayoutRequestsRoute: AuthDashboardLayoutRequestsRoute,
}

const AuthDashboardLayoutRouteWithChildren =
  AuthDashboardLayoutRoute._addFileChildren(AuthDashboardLayoutRouteChildren)

interface AuthRouteChildren {
  AuthDashboardLayoutRoute: typeof AuthDashboardLayoutRouteWithChildren
  AuthOnBoardingRoute: typeof AuthOnBoardingRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthDashboardLayoutRoute: AuthDashboardLayoutRouteWithChildren,
  AuthOnBoardingRoute: AuthOnBoardingRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  authLoginRoute: authLoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
